python：3.7.4
django: 2.2.3
Pillow: 6.1.0
pymysql: 0.9.3
cryptography：2.19




由于pymysql: 0.9.3 版本过低 需要注销下面的django源文件
File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\django\db\backends\mysql\base.py", line 35
File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\django\db\backends\mysql\base.py", line 36

把容器打包成镜像
docker commit afcaf46e8305 centos:vim


1. 登录阿里云Docker Registry
$ sudo docker login --username=370499002@qq.com registry.cn-hangzhou.aliyuncs.com
用于登录的用户名为阿里云账号全名，密码为开通服务时设置的密码。

您可以在产品控制台首页修改登录密码。

2. 从Registry中拉取镜像
$ sudo docker pull registry.cn-hangzhou.aliyuncs.com/my_blog/my_blog:[镜像版本号]
3. 将镜像推送到Registry
$ sudo docker login --username=370499002@qq.com registry.cn-hangzhou.aliyuncs.com
$ sudo docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/my_blog/my_blog:[镜像版本号]
$ sudo docker push registry.cn-hangzhou.aliyuncs.com/my_blog/my_blog:[镜像版本号]
请根据实际镜像信息替换示例中的[ImageId]和[镜像版本号]参数。

login:
docker exec -it [xxxxxx] /bin/bash


启动web:
docker run -it --name web  -v /project_my_blog:/project_my_blog -p 8080:8080  [docker_nameid]  /bin/bash

启动mysql:
docker run -p 3306:3306 --name [name] -v /project_my_blog/mysql/conf:/etc/mysql/conf.d -v /project_my_blog/mysql/logs:/etc/mysql/logs -v /project_my_blog/mysql/data:/var/lib/mysql -d [docker_nameid]

启动pycharm：
/usr/src/pycharm-2018.3.4/bin/pycharm.sh

启动uwsgi：在docker 内：
1.命令行
uwsgi --chdir /project_my_blog/my_blog --http :8080 --module my_blog.wsgi:application
2.配置文件启动
a：
[uwsgi]
chdir = /project_my_blog/my_blog
module = my_blog.wsgi:application

master = True
processes = 4
harakiri = 60
max-requests = 5000

socket = 127.0.0.1:8080
uid = 1000
gid = 2000

pidfile = /project_my_blog/my_blog/uwsgi/master.pid
daemonize = /project_my_blog/my_blog/uwsgi/uwsgi.log
vacuum = True

b:文件启动的命令
uwsgi --ini /project_my_blog/my_blog/uswgi/uswgi.ini

nginx配置文件/etc/nginx/nginx.conf
server {
        listen       80;
        server_name  localhost;
        
        location / {            
            include  /tec/nginx/uwsgi_params;
            uwsgi_pass  127.0.0.1:8080;              //必须和uwsgi中的设置一致
            uwsgi_param UWSGI_SCRIPT /project_my_blog/my_blog/my_blog.wsgi;  //入口文件，即wsgi.py相对于项目根目录的位置，“.”相当于一层目录
            uwsgi_param UWSGI_CHDIR /project_my_blog/my_blog;       //项目根目录
            index  index.html index.htm;
            client_max_body_size 35m;
        }
    }
server {
        listen       80;
        server_name  localhost;
        
        location / {
            include  /tec/nginx/uwsgi_params;
            uwsgi_pass  127.0.0.1:8080;
            uwsgi_param UWSGI_SCRIPT /project_my_blog/my_blog/my_blog.wsgi;
            uwsgi_param UWSGI_CHDIR /project_my_blog/my_blog;
            index  index.html index.htm;
            client_max_body_size 35m;
        }
    }

命令行启动docker nginx：
docker run -p 9090:80 --name nginx_web -v /project_my_blog/nginx/log/:/var/log/nginx -v /project_my_blog/nginx/etc/default.conf:/etc/nginx/conf.d/default.conf -v /project_my_blog/nginx/html/:/usr/share/nginx/html -d nginx 



upstream django{
         # server unix:///home/andrew/django/abuild/abulid.sock;
         server 192.168.21.59:8022;
}

server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name 192.168.21.59;//宿主机ip地址
        charset utf-8;

        client_max_body_size 75M;


       location /media {
             alias /home/andrew/testdjango/media;
       }

       location /static {
            alias /home/andrew/testdjango/static;
       }　　

       location / {
           uwsgi_pass django;
           include /etc/nginx/uwsgi_params;

       }
}
upstream django{
         # server unix:///home/andrew/django/abuild/abulid.sock;
         server 192.168.229.144:8080;
}
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name 192.168.229.144;
        charset utf-8;

        client_max_body_size 75M;


       location /media {
             alias /project_my_blog/my_blog/media;
       }

       location /static {
            alias /project_my_blog/my_blog/static;
       }　　

       location / {
           uwsgi_pass django;
           include /etc/nginx/uwsgi_params;

       }
}


[uwsgi]
socket = :8080
chdir = /project_my_blog/my_blog
module = my_blog.wsgi:application

master = true
processes = 4
harakiri = 60
max-requests = 5000
chmod-socket = 664

vacuum = true
py-autoreload = 1







